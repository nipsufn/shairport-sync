# Builds & pushes a docker image when a tag is created.
# Tag pattern: '[tag]' & '[tag]-classic'
# 'latest' & 'classic' also, when master tagged.

# Only pushes the tag when it matches one of the following patterns:
# X, X.Y or X.Y.Z

name: Build and push docker (tag)

on:
  push:
    tags:
      - '[0-9]+'                 # X
      - '[0-9]+\.[0-9]+'         # X.Y
      - '[0-9]+\.[0-9]+\.[0-9]+' # X.Y.Z

env:
  DOCKER_PLATFORMS: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64

jobs:
  prep:
    runs-on: ubuntu-latest
    outputs:
      shairport-sync-branch: ${{ steps.shairport-sync-branch.outputs.SHAIRPORT_SYNC_BRANCH }}
      latest-tag: ${{ steps.latest-tag.outputs.LATEST_TAG }}
      nqptp-branch: ${{ steps.image-tag-base-development.outputs.NQPTP_BRANCH || 'main' }}
      tag: ${{ steps.git-tag.outputs.GIT_TAG }}
    steps:
      - name: Set SHAIRPORT_SYNC_BRANCH env.
        id: shairport-sync-branch
        run: |
          raw=$(git branch -r --contains ${{ github.ref }})
          branch=${raw##*/}
          echo "SHAIRPORT_SYNC_BRANCH=${branch}" >> $GITHUB_OUTPUT

      - name: Set tag env
        id: git-tag
        run: |
          echo "GIT_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Is branch "master"?
        if: ${{ env.SHAIRPORT_SYNC_BRANCH == 'master' }}
        id: latest-tag
        run: |
          echo "LATEST_TAG=true" >> $GITHUB_OUTPUT

      - name: Is branch "development"?
        if: ${{ env.SHAIRPORT_SYNC_BRANCH == 'development' }}
        id: image-tag-base-development
        run: |
          echo "NQPTP_BRANCH=development" >> $GITHUB_OUTPUT

  main:
    needs:
      - prep
    strategy:
      matrix:
        image:
          - name: Build and push (classic, ALSA)
            file: './docker/classic-alsa/Dockerfile'
            tag-suffix: -classic
          - name: Build and push (AirPlay2, ALSA)
            file: './docker/ap2-alsa/Dockerfile'
            tag-suffix: 
          - name: Build and push (classic, PulseAudio)
            file: './docker/classic-pa/Dockerfile'
            tag-suffix: -classic-pa
          - name: Build and push (AirPlay2, PulseAudio)
            file: './docker/ap2-pa/Dockerfile'
            tag-suffix: -pa

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_REGISTRY_USER }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      - name: ${{ matrix.image.name }}
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: "${{ matrix.image.file }}"
          platforms: ${{ env.DOCKER_PLATFORMS }}
          push: true
          tags: |
            ${{ secrets.DOCKER_IMAGE_NAME }}:${{ needs.prep.outputs.tag }}${{ matrix.image.tag-suffix }}
            ${{ needs.prep.outputs.latest-tag == 'true' && format('{0}:{1}', secrets.DOCKER_IMAGE_NAME, matrix.image.tag-suffix) || '' }}
          build-args: |
            SHAIRPORT_SYNC_BRANCH=${{ needs.prep.outputs.shairport-sync-branch }}
            NQPTP_BRANCH=${{ needs.prep.outputs.nqptp-branch }}
